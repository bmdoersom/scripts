/* ---------------------------------------
- Description: This script will create
- the directory structure required for
- AEC when a ITB is awarded on contract
-
- Developer: Brian Doersom
-
- Date: 3 February 2020
----------------------------------------*/

//************
//*** VARS ***
//************

string currYear = year(currentDate());
string currYearAwardDir = "/" + currYear;
string jobDir = customfield_10301;
string baseDir = "/tmp";
string dirFQP = baseDir;
string [] awardedContractDir = {"/AWARDED SALES CONTRACTS", currYearAwardDir};
string contractDirFQP = "/tmp/AWARDED SALES CONTRACTS/" + currYear;
string originalBidDocDir = "/12.OriginalBidDocuments/";

// SysMsg Definitions
string createDirSuccessMsg = "SysMsg_S001: Successfully created " + "[" + contractDirFQP + "]" + " directory.";
string createDirFailMsg = "SysMsg_F001: Failed to create " + "[" + contractDirFQP + "]" + " directory.";
string mvDirSuccessMsg = "SysMsg_S002: Successfully moved the " + "[" + jobDir + "]" + " directory contents.";
string mvDirFailMsg = "SysMsg_F002: Failed to move the " + "[" + jobDir + "]" + " directory contents.";
string quoteDirActionSuccessMsg = "SysMsg_S003: Successfully configured the quote directory for awarded status.";
string quoteDirActionFailMsg = "SysMsg_F003: Failed to configure the quote directory for awarded status.";

//*************
//*** FUNCS ***
//*************

function awardedDirAction(){
    
    number awardedDirExitCode;
    
    // Check for the Contracted Awarded Directory Structure
    if(!directoryExists(contractDirFQP)){
    
        // Create the base directory struct if non-existent
        for(string awardDir in #{awardedContractDir}){
                
            dirFQP += awardDir;
            
            if(!directoryExists(dirFQP)){
               
                createDirectory(dirFQP);
               
            } //End of nested if statement
             
        } // End of For Loop
        
        // If the Contracted Awarded Directory Structure
        // failed to create.
        if(!directoryExists(contractDirFQP)){
            
            awardedDirExitCode = 1;
            
        } else {
        
            awardedDirExitCode = 0;
            
        } // End of nested else statement
        
    } //End of if statement
    
    return awardedDirExitCode;
    
} // End of awardedDirAction() Func

function quoteDirAction(){
    
    number quoteDirActionExitCode;
    
    if(directoryExists(jobDir)){
        
        string bidDocDir = jobDir + originalBidDocDir;
        
        if (createDirectory(bidDocDir)) {
            
            quoteDirActionExitCode = 0;
            
        } else {
            
            quoteDirActionExitCode = 1;
            
        }// End if Statement
        
    } // End outer if statement
    
    return quoteDirActionExitCode;
    
} // End quoteDirAction() function

function jobDirMove(){

    number jobDirMoveExitCode;
    
    if(directoryExists(jobDir)){
        
        string [] sysRet = system("/usr/bin/bash /tmp/helloWorld.sh " + jobDir);
        
        // Create system call to move directory in place
        if (sysRet[0] == "0.0"){
            
            jobDirMoveExitCode = 0;
            
        } else {
            
            jobDirMoveExitCode = 1;
            
        }
        
    } else {
        
        jobDirMoveExitCode = 1;
        
    }
    
    return jobDirMoveExitCode;
        
} //End of jobDirMove() Func

//************
//*** MAIN ***
//************

if (awardedDirAction() == 0){

    addComment(key, currentUser(), createDirSuccessMsg);
    
    if (quoteDirAction() == 0) {
    
        addComment(key, currentUser(), quoteDirActionSuccessMsg);
        
        //if (jobDirMove() == 0) {
        
          //  addComment(key, currentUser(), mvDirSuccessMsg);
        
        //} else {
        
          //  addComment(key, currentUser(), mvDirFailMsg);
        
        //}
        
    } else {
        
        addComment(key, currentUser(), quoteDirActionFailMsg);
        
    }
    
} else {
    
    addComment(key, currentUser(), createDirFailMsg);
    
}// End of if statement





